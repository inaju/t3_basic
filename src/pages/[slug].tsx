import { GetStaticProps, type NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";


const ProfileFeed = (props: { userId: string }) => {
  const { data, isLoading } = api.posts.getPostsByUserId.useQuery({ userId: props.userId })
  if (isLoading) return <LoadingPage />

  if (!data || data.length === 0) return <div>User has not posted</div>

  return (
    <div className="flex flex-col">
      {data.map(((fullPost) => (<PostView  {...fullPost} key={fullPost.post.id} />)))}

    </div>
  )
};
const ProfilePage: NextPage<{ username: string }> = ({ username }) => {
  // if (!postLoaded && !userLoaded) return <LoadingPage />;
  console.log(username, 'username')
  const { data, isLoading } = api.profile.getUserByUserName.useQuery({
    username
  });
  console.log(data, 'data')
  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>404</div>;

  return (
    <>
      <Head>
        <title>Profile</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageLayout>
        <div className="relative h-36 bg-slate-600">
          <Image
            width={96}
            height={96}
            className="-mb-[48px] rounded-full border-4 border-black absolute bottom-0 left-0 ml-4 "
            alt={`${data.username ?? ""}'s profile pic`} src={data.profileImageUrl} />
        </div>
        <div className="h-[64px]">

        </div>
        <div className="p-4 text-2xl">

          {`@${data.firstName}`}
        </div>
        <div className="w-full border-b border-slate-100"></div>
        <ProfileFeed userId={data.id} />
      </PageLayout>

    </>
  );
};

import { createServerSideHelpers } from '@trpc/react-query/server';
import { appRouter } from "~/server/api/root";
import { prisma } from "~/server/db"
import SuperJSON from "superjson";
import { PageLayout } from "./layout";
import Image from "next/image";
import { LoadingPage } from "~/components/loading";
import { PostView } from "~/components/postview";

export const getStaticProps: GetStaticProps = async (context) => {
  const helpers = createServerSideHelpers({
    router: appRouter,
    ctx: { prisma, userId: null },
    transformer: SuperJSON, // optional - adds superjson serialization
  });

  const slug = context.params?.slug as string
  console.log(slug, 'slug')
  if (!slug) throw new Error("no Slug")

  const username = slug.replace("@", "")
  await helpers.profile.getUserByUserName.prefetch({ username })

  return {
    props: {
      trpcState: helpers.dehydrate(),
      username
    }
  }
}

export const getStaticPaths = () => {
  return { paths: [], fallback: "blocking" }
}
export default ProfilePage;
